#!/usr/bin/env python3
# vim:set et sw=4 ts=4 sts=4 tw=72:
# Evan Wilde (c) 2018

import argparse
import sys
import os

import shutil

import cmakehelpers

VERSION = 0.1


# Argument actions

class MakePathAbsolute(argparse.Action):
    """
    Convert filepaths to absolute filepaths
    """
    def __call__(self, parser, args, values, option_string=None):
        setattr(args, self.dest, os.path.abspath(values))


# Main programs

def move_main():
    ap = argparse.ArgumentParser()
    ap.add_argument("SOURCE", action=MakePathAbsolute)
    ap.add_argument("DESTINATION", action=MakePathAbsolute)
    ap.add_argument('--version', action='version',
                    version="%(prog)s {}".format(VERSION))
    args = ap.parse_args()
    print("Moving build directory", args)

    try:
        fname = cmakehelpers.get_cache_name(args.SOURCE)
    except cmakehelpers.IncorrectFileError as e:
        print('Error: Incorrect file passed' +
              f'"{os.path.basename(e.input_name)}" expected "{e.name}"',
              file=sys.stderr)
        return 1
    except FileNotFoundError as e:
        print("Error: File not found", e, file=sys.stderr)
        return 1

    build_dirname = os.path.dirname(fname)
    # Fix the CMakeCache file
    with open(fname, 'r') as f:
        lines = cmakehelpers.change_base_dir(build_dirname,
                                             args.DESTINATION,
                                             [ line.rstrip() for line in f ])

        # TODO: Unify the creation of the destination
        #       Duplicate from cmake-cp

        # Overwrite if it already exists
        if os.path.exists(args.DESTINATION):
            shutil.rmtree(args.DESTINATION)
        os.mkdir(args.DESTINATION)
        shutil.move(fname, args.DESTINATION)
        shutil.rmtree(build_dirname)
        dst_cache = os.path.join(args.DESTINATION, 'CMakeCache.txt')
        with open(dst_cache, 'w') as out_f:
            out_f.write('\n'.join(lines))
    return 0


def copy_main():
    ap = argparse.ArgumentParser()
    ap.add_argument("SOURCE", action=MakePathAbsolute)
    ap.add_argument("DESTINATION", action=MakePathAbsolute)
    ap.add_argument('--version', action='version',
                    version="%(prog)s {}".format(VERSION))
    args = ap.parse_args()

    print("Copying build directory")

    try:
        fname = cmakehelpers.get_cache_name(args.SOURCE)
    except cmakehelpers.IncorrectFileError as e:
        print('Error: Incorrect file passed' +
              f'"{os.path.basename(e.input_name)}" expected "{e.name}"',
              file=sys.stderr)
        return 1
    except FileNotFoundError as e:
        print("Error: File not found", e, file=sys.stderr)
        return 1

    build_dirname = os.path.dirname(fname)

    # TODO: Unify the creation of the destination
    #       Duplicate from cmake-mv

    # Overwrite if the destination already exists
    if os.path.exists(args.DESTINATION):
        shutil.rmtree(args.DESTINATION)
    os.mkdir(args.DESTINATION)
    shutil.copy(fname, args.DESTINATION)

    # Fix the CMakeCache file
    with open(fname, 'r') as f:
        lines = cmakehelpers.change_base_dir(build_dirname,
                                             args.DESTINATION,
                                             [ line.rstrip() for line in f ])

        dst_cache = os.path.join(args.DESTINATION, 'CMakeCache.txt')

        with open(dst_cache, 'w') as out_f:
            out_f.write('\n'.join(lines))
    return 0


def default_main():

    help_string = """<applet> arguments...

cmake-helpers is a multi-call program, using symlink name to define
which applet should be called.

cmake-cp [-h] [--version] SOURCE DESTINATION
--------------------------------------------
Copy SOURCE to DEST.

The SOURCE is the original build directory containing
'CMakeCache.txt', and DESTINATION is where the build directory will
be copied to.

After copying, the CMakeCache file will be corrected to reflect the
new build directory.


cmake-mv [-h] [--version] SOURCE DESTINATION
--------------------------------------------
Rename SOURCE to DESTINATION.

The SOURCE is the original build directory containing
'CMakeCache.txt', and DESTINATION is the new location of the build
directory.

The CMakeCache will be fixed after moving to reflect the new build
directory location."""

    if "--help" in sys.argv or "-h" in sys.argv:
        print(help_string)
        return 0

    if "--version" in sys.argv or "-v" in sys.argv:
        print("{} {}".format(__file__, VERSION))
        return 0

    print("Must call a valid helper script [" +
          ", ".join(programs.keys()) + ']', file=sys.stderr)
    return 1


programs = {"cmake-cp": copy_main,
            "cmake-mv": move_main}

scriptname = os.path.basename(__file__)
sys.exit(programs.get(scriptname, default_main)())
